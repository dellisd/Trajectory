{"version":3,"sources":["assets/search-light.svg","assets/road-animated.svg","assets/wheel.svg","assets/location-animated.svg","assets/visible-animated.svg","components/VehicleCard.tsx","components/Map.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/gotrain-light.svg","assets/via-light.svg","assets/streetcar-light.svg","assets/subway-light.svg","assets/bus-light.svg","assets/road.svg","assets/location.svg","assets/visible.svg","assets/trajectory_logo.svg","assets/button-right.svg","assets/button-left.svg","assets/button-down.svg"],"names":["module","exports","VehicleCard","props","useState","following","setFollowing","useEffect","followVehicle","className","type","src","icon","alt","includes","route","onClick","clsx","minimized","dividerAnimation","direction","terminal","nextStation","delay","minutes","hours","Math","floor","totalDelay","Map","React","longitude","latitude","zoom","bearing","viewport","setViewport","width","height","mapStyle","mapboxApiAccessToken","process","onViewportChange","mapOptions","hash","sampleVehicles","transitImagesLight","gotrain","GOTrainLight","viarail","VIALight","streetcar","StreetCarLight","subway","SubwayLight","bus","BusLight","App","dropdown","activateDropdown","search","activateSearch","currentVehicles","searchValue","setSearchValue","followingVehicle","setFollowingVehicle","currVehicle","setCurrVehicle","cardAnimationActive","setCardAnimationActive","vehicleCardMinimized","setVehicleCardMinimized","wheelHover","setWheelHover","vehicles","roads","location","ui","settings","setSettings","activeTransit","setActiveTransit","setTimeout","console","log","transitIcon","transitType","key","transitOption","title","buttonDown","Object","keys","map","transit","autoFocus","onFocus","e","target","select","disabled","placeholder","onChange","value","searchLight","vehicle","replace","toString","length","buttonLeft","buttonRight","onMouseOver","currentTarget","roadAnimated","onMouseOut","road","wheel","locationAnimated","eyeAnimated","eye","logo","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06ff087e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-light.ae9f9b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/road-animated.1ca20893.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheel.37b6c3d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/location-animated.764ad82c.svg\";","module.exports = __webpack_public_path__ + \"static/media/visible-animated.0682f0e4.svg\";","import React, { useState, useEffect } from 'react';\r\nimport { CarouselCardProps } from '../Interfaces';\r\nimport clsx from 'clsx';\r\n\r\nconst totalDelay = (minutes: number) => {\r\n  const hours = Math.floor(minutes / 60);\r\n\r\n  return (hours > 0 ? (`${hours} hour${hours > 1 ? 's' : ''}`) : '') \r\n    + (minutes % 60 > 0 ? (hours === 0 ? (minutes % 60 === 1 ? `${minutes} minute` : `${minutes} minutes`) : `, ${minutes % 60} minutes`) : '');\r\n}\r\n\r\nexport const VehicleCard = (props: CarouselCardProps) => {\r\n  const [following, setFollowing] = useState(false);  \r\n\r\n  useEffect(() => {\r\n    props.followVehicle(following);\r\n  }, [following])\r\n\r\n  return (\r\n    <div className=\"vehicle-card\">\r\n      <div className=\"vehicle-card-header-container\">\r\n        <div className={`transit-icon-container ${props.type}`}>\r\n          <img className=\"transit-icon\" src={props.icon} alt=\"current vehicle icon\" />\r\n        </div>\r\n        <h3 className=\"vehicle-card-header\">\r\n          <b>{!['viarail', 'gotrain'].includes(props.type) ? 'Route' : 'Train'} {props.route}</b>\r\n        </h3>\r\n        <div onClick={() => setFollowing(!following)} className=\"vehicle-card-button\">\r\n          <h4>\r\n            <b>{following ? 'Following' : 'Follow'}</b>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div className={clsx(\"vehicle-card-info\", { \"minimized\": props.minimized })}>\r\n        <hr className={`${props.type} ${props.dividerAnimation}`} />\r\n        <div className=\"vehicle-card-section\">\r\n          <p>\r\n            {props.direction}\r\n          </p>\r\n          <p>\r\n            <b>{props.terminal}</b>\r\n          </p>\r\n        </div>\r\n        <div className=\"vehicle-card-section\">\r\n          <p>\r\n            Next Station\r\n          </p>\r\n          <p>\r\n            <b>{props.nextStation}</b>\r\n          </p>\r\n        </div>\r\n        {props.delay > 0 && (<div className=\"vehicle-card-section\">\r\n          <p>\r\n            Delay\r\n          </p>\r\n          <p>\r\n            <b>{totalDelay(props.delay)}</b>\r\n          </p>\r\n        </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport ReactMapGL, { ViewState } from \"react-map-gl\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\n\r\nexport const Map = () => {\r\n  const [viewport, setViewport] = React.useState<ViewState>({\r\n    longitude: -79.36912,\r\n    latitude: 43.65016,\r\n    zoom: 12,\r\n    bearing: -15,\r\n  });\r\n\r\n  return (\r\n    <AutoSizer>\r\n      {({ width, height }) => (\r\n        <ReactMapGL\r\n          mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n          {...viewport}\r\n          width={width}\r\n          height={height}\r\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\r\n          onViewportChange={setViewport}\r\n          mapOptions={{\r\n            hash: true,\r\n          }}\r\n        />\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport clsx from 'clsx';\r\nimport { ActiveTransit, TransitIconImages, CarouselVehicle } from './Interfaces';\r\nimport { VehicleCard } from './components/VehicleCard';\r\nimport logo from './assets/trajectory_logo.svg';\r\nimport buttonRight from './assets/button-right.svg';\r\nimport buttonLeft from './assets/button-left.svg';\r\nimport buttonDown from './assets/button-down.svg';\r\nimport GOTrainLight from './assets/gotrain-light.svg';\r\nimport VIALight from './assets/via-light.svg';\r\nimport StreetCarLight from './assets/streetcar-light.svg';\r\nimport SubwayLight from './assets/subway-light.svg';\r\nimport BusLight from './assets/bus-light.svg';\r\nimport searchLight from './assets/search-light.svg';\r\nimport { Map } from \"./components/Map\";\r\nimport roadAnimated from './assets/road-animated.svg';\r\nimport road from './assets/road.svg';\r\nimport wheel from './assets/wheel.svg';\r\nimport location from './assets/location.svg';\r\nimport locationAnimated from './assets/location-animated.svg';\r\nimport eye from './assets/visible.svg';\r\nimport eyeAnimated from './assets/visible-animated.svg';\r\n\r\nconst sampleVehicles: CarouselVehicle[] = [\r\n  {\r\n    type: 'bus',\r\n    route: 505,\r\n    direction: 'Westbound',\r\n    terminal: `Queen's Park`,\r\n    delay: 5,\r\n    nextStation: 'Kensington'\r\n  },\r\n  {\r\n    type: 'streetcar',\r\n    route: 105,\r\n    direction: 'Northbound',\r\n    terminal: `Queen's Park`,\r\n    delay: 10,\r\n    nextStation: 'Dundas'\r\n  },\r\n  {\r\n    type: 'viarail',\r\n    route: 52,\r\n    direction: 'Northbound',\r\n    terminal: `Montreal`,\r\n    delay: 45,\r\n    nextStation: 'Ottawa'\r\n  },\r\n  {\r\n    type: 'gotrain',\r\n    route: 12,\r\n    direction: 'Westbound',\r\n    terminal: `Oshawa`,\r\n    delay: 75,\r\n    nextStation: 'Oshawa'\r\n  },\r\n];\r\n\r\nconst transitImagesLight: TransitIconImages = {\r\n  gotrain: GOTrainLight,\r\n  viarail: VIALight,\r\n  streetcar: StreetCarLight,\r\n  subway: SubwayLight,\r\n  bus: BusLight\r\n};\r\n\r\nconst App = () => {\r\n  const [dropdown, activateDropdown] = useState(false);\r\n  const [search, activateSearch] = useState(false);\r\n\r\n  // ?Use this to populate the currentVehicles array with API data\r\n  const [currentVehicles, setCurrentVehiclces] = useState(sampleVehicles);\r\n\r\n  // ?Use this to search values with a form\r\n  const [searchValue, setSearchValue] = useState('');\r\n  \r\n  // ?Use a search API (maybe Google maps) to suggest locations\r\n  const [searchSuggestions, setSearchSuggestions] = useState([]);\r\n\r\n  const [followingVehicle, setFollowingVehicle] = useState<CarouselVehicle | {}>({});\r\n  const [currVehicle, setCurrVehicle] = useState(0);\r\n  const [cardAnimationActive, setCardAnimationActive] = useState(false);\r\n  const [vehicleCardMinimized, setVehicleCardMinimized] = useState(false);\r\n  const [wheelHover, setWheelHover] = useState(false);\r\n  const [settings, setSettings] = useState({\r\n    vehicles: true,\r\n    roads: true,\r\n    location: false,\r\n    ui: true\r\n  });\r\n  const [activeTransit, setActiveTransit] = useState<ActiveTransit>({\r\n    gotrain: true,\r\n    viarail: true,\r\n    streetcar: false,\r\n    subway: true,\r\n    bus: false\r\n  });\r\n  \r\n  useEffect(() => {\r\n    setCardAnimationActive(true);\r\n    setTimeout(() => {\r\n      setCardAnimationActive(false);\r\n    }, 300);\r\n  }, [currVehicle])\r\n  \r\n  useEffect(() => {\r\n    console.log(followingVehicle);\r\n  }, [followingVehicle])\r\n\r\n  const transitIcon = (transitType: string, type?: string) => (\r\n    <div \r\n      key={transitType} \r\n      onClick={() => type !== 'suggestion' && setActiveTransit({ ...activeTransit, [`${transitType}`]: !activeTransit[transitType] })} \r\n      className={`transit-icon-container ${transitType} ${!activeTransit[transitType] && 'inactive'}`}\r\n    >\r\n      <img className=\"transit-icon\" src={transitImagesLight[transitType]} alt={`${transitType} icon`} />\r\n    </div>\r\n  );\r\n  \r\n  const transitOption = (title: string, transitType: string, icon: string) => (\r\n    <div className=\"transit-box\"> \r\n      {transitIcon(transitType)}\r\n      <p className=\"transit-header\">\r\n        {title}\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  const generateSeachSuggestions = () => searchValue && (\r\n    <div className=\"search-suggestions-container\">\r\n      {sampleVehicles.map((vehicle) => (\r\n        vehicle.type.includes(searchValue.replace(' ', ''))\r\n        || vehicle.route.toString().includes(searchValue)\r\n        || vehicle.direction.includes(searchValue)\r\n        || vehicle.terminal.includes(searchValue)\r\n        || vehicle.nextStation.includes(searchValue))\r\n      && (\r\n        <div className=\"transit-box search-suggestion\"> \r\n          {transitIcon(vehicle.type, 'suggestion')}\r\n          <p className=\"transit-header\">\r\n            <b>{!['viarail', 'gotrain'].includes(vehicle.type) ? 'Route' : 'Train'} {vehicle.route}</b>\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"map\">\r\n        <Map/>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <div className={clsx(\"side-menu-container animated\", { \"ui-hidden\": !settings.ui, \"slide-left\": search })}>\r\n          <div className=\"side-menu-header-container\">\r\n            <h3 className=\"side-menu-header\">\r\n              Active transit\r\n            </h3>\r\n            <img\r\n              onClick={() => activateDropdown(!dropdown)} \r\n              className={clsx(\"arrow-button right animated\", { \"dropdown-on\": dropdown, \"dropdown-off\": !dropdown })} \r\n              src={buttonDown}\r\n              alt=\"dropdown button\" \r\n            />\r\n          </div>\r\n          <hr  className=\"side-menu-divider\" />\r\n          <div className={clsx(\"side-menu-active-transit\", { \"slide-out\": dropdown })}>\r\n            {Object.keys(activeTransit).map((transit: string) => transitIcon(transit))}\r\n          </div>\r\n          <div className={clsx(\"side-menu-options\", { \"hidden\": !dropdown })}>\r\n            {transitOption('Go Train', 'gotrain', GOTrainLight)}\r\n            {transitOption('VIA', 'viarail', VIALight)}\r\n            {transitOption('Street Car', 'streetcar', StreetCarLight)}\r\n            {transitOption('Subway', 'subway', SubwayLight)}\r\n            {transitOption('Bus', 'bus', BusLight)}\r\n          </div>\r\n        </div>\r\n        <div className={clsx(\"search-container animated\", { \"ui-hidden\": !settings.ui, \"extend\": search })}>\r\n          <div className=\"search-controls-container\">\r\n            <input \r\n              autoFocus={search}\r\n              onFocus={(e) => e.target.select()}\r\n              disabled={!search} \r\n              className={clsx(\"search-box\", { \"search-box-on\": search, \"search-box-off\": !search })} \r\n              type=\"text\" placeholder=\"505 | Montreal | via | Union Station\"\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n              value={searchValue}\r\n            />\r\n            <div className=\"search-icon-container\" onClick={() => activateSearch(!search)}>\r\n              <img className=\"transit-icon\" src={searchLight} alt=\"search icon\" />\r\n            </div>\r\n          </div>\r\n          {search && generateSeachSuggestions()}\r\n        </div>\r\n        {currentVehicles.length > 0 ? (\r\n          <div\r\n            className={clsx(\"vehicle-card-options-container animated\", { \"slide-left-out\": dropdown, \"ui-hidden\": !settings.ui, \"slide-left\": search })}\r\n          >\r\n            <div\r\n              className=\"vehicle-card-minimize-container\" \r\n              onClick={() => setVehicleCardMinimized(!vehicleCardMinimized)}\r\n            >\r\n              <hr />\r\n            </div>\r\n            <div className=\"vehicle-card-container\">\r\n              <img\r\n                onClick={() => setCurrVehicle(currVehicle => (currVehicle === 0 ? currentVehicles.length - 1 : --currVehicle))} \r\n                className=\"arrow-button left\"\r\n                src={buttonLeft}\r\n                alt=\"arrow left\"\r\n              />\r\n                <div className={\"vehicle-card-body-container\"}>\r\n                  <div className={\"vehicle-card-body animated\"}>\r\n                    <VehicleCard\r\n                      type={currentVehicles[currVehicle].type}\r\n                      route={currentVehicles[currVehicle].route} \r\n                      direction={currentVehicles[currVehicle].direction}\r\n                      terminal={currentVehicles[currVehicle].terminal}\r\n                      delay={currentVehicles[currVehicle].delay}\r\n                      nextStation={currentVehicles[currVehicle].nextStation}\r\n                      icon={transitImagesLight[currentVehicles[currVehicle].type]}\r\n                      dividerAnimation={clsx({ \"slide-left-out\": cardAnimationActive })}\r\n                      followVehicle={setFollowingVehicle}\r\n                      minimized={vehicleCardMinimized}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              <img \r\n              onClick={() => setCurrVehicle(currVehicle => (currVehicle === currentVehicles.length - 1 ? 0 : ++currVehicle))} \r\n              className=\"arrow-button right\" \r\n              src={buttonRight} \r\n              alt=\"arrow right\" \r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div \r\n            className={ clsx(\"vehicle-card-options-container animated vehicle-card-container\", \r\n              { \r\n                \"slide-left-out\": dropdown, \r\n                \"ui-hidden\": !settings.ui \r\n              }\r\n            )}\r\n          >\r\n            <h3>\r\n              No transit at the moment\r\n            </h3>\r\n          </div>\r\n        )}\r\n        <div className={clsx(\"advanced-controls-container animated\", { \"slide-left-outter\": search })}>\r\n          {settings.ui && (\r\n            <div>\r\n              <div \r\n                className={clsx(\"transit-icon-container advanced-controls-icon-container\", { \"active\": settings.roads })}\r\n                onClick={() => setSettings({ ...settings, roads: !settings.roads })}\r\n              >\r\n                <img \r\n                  onMouseOver={(e) => e.currentTarget.src = roadAnimated} \r\n                  onMouseOut={(e) => e.currentTarget.src = road}\r\n                  className=\"transit-icon\" \r\n                  src={road} alt=\"road icon\" \r\n                />\r\n              </div>\r\n              <div \r\n                className={clsx(\"transit-icon-container advanced-controls-icon-container\", { \"active\": settings.vehicles })}\r\n                onClick={() => setSettings({ ...settings, vehicles: !settings.vehicles })}\r\n              >\r\n                <img\r\n                  className={clsx(\"transit-icon animated\", { \"animate-wheel\": wheelHover })}\r\n                  src={wheel} alt=\"wheel icon\"\r\n                  onMouseOver={() => setWheelHover(!wheelHover)}\r\n                  onMouseOut={() => setWheelHover(!wheelHover)}\r\n                />\r\n              </div>\r\n              <div\r\n                className={clsx(\"transit-icon-container advanced-controls-icon-container\", { \"active\": settings.location })}\r\n                onClick={() => setSettings({ ...settings, location: !settings.location })}\r\n              >\r\n                <img\r\n                  onMouseOver={(e) => e.currentTarget.src = locationAnimated} \r\n                  onMouseOut={(e) => e.currentTarget.src = location}\r\n                  className=\"transit-icon\"\r\n                  src={location} alt=\"location icon\" \r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={clsx(\"transit-icon-container advanced-controls-icon-container\", { \"active\": settings.ui })}\r\n            onClick={() => setSettings({ ...settings, ui: !settings.ui })}\r\n          >\r\n            {settings.ui && (\r\n              <img\r\n                onMouseOver={(e) => e.currentTarget.src = eyeAnimated} \r\n                onMouseOut={(e) => e.currentTarget.src = eye}\r\n                className=\"transit-icon\"\r\n                src={eye} alt=\"visible icon\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img alt=\"Trajectory logo\" className={clsx(\"logo animated\", { \"slide-left\": search })} src={logo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/gotrain-light.a319f4ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/via-light.c8a8aee2.svg\";","module.exports = __webpack_public_path__ + \"static/media/streetcar-light.49c5cc9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/subway-light.447839b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/bus-light.08ed1c65.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.d04f9a08.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.602d69c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/visible.673c6630.svg\";","module.exports = __webpack_public_path__ + \"static/media/trajectory_logo.b079ed2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-right.c7f6c1d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-left.0b0ece0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/button-down.aaebb65c.svg\";"],"sourceRoot":""}